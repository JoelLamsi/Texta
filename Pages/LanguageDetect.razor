@page "/language-detect"
@inject LanguageDetectionService LanguageDetectionService

<PageTitle>Kielen tunnistin</PageTitle>

<h3>Kielen tunnistin</h3>

<div class="input-container">
    <textarea @bind="InputText" rows="5" cols="50" placeholder="Kirjoita teksti..."></textarea>
    <br />
    <button @onclick="DetectLanguage">Tunnista kieli</button>
</div>

@if (IsLoading)
{
    <p>Tunnistetaan...</p>
} 
else if (!string.IsNullOrEmpty(DetectedLanguage))
{
    <p><strong>Tunnistettu kieli:</strong> @DetectedLanguage</p>
}

<footer class="footer">
    <p>
        Powered by the <a href="https://detectlanguage.com" target="__blank" rel="noopener noreferrer">DetectLanguage API</a>.
        DetectLanguage is a trademark of DetectLanguage.com.
    </p>
</footer>

@code {
    private string InputText = string.Empty;
    private string DetectedLanguage = string.Empty;
    private bool IsLoading = false;

    private async Task DetectLanguage()
    {
        if (string.IsNullOrWhiteSpace(InputText)) return;

        try
        {
            IsLoading = true;
            DetectedLanguage = await LanguageDetectionService.DetectLanguageAsync(InputText) ?? "Ei tunnistettu";
        }
        catch (Exception ex)
        {
            DetectedLanguage = $"Virhe: {ex.Message}";
        }
        finally
        {
            IsLoading = false;
        }
    }
}